// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Belt_List = require("bs-platform/lib/js/belt_List.js");
var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");

function take_while(arr, check, $staropt$star) {
  var i0 = $staropt$star !== undefined ? $staropt$star : 0;
  var i = 0;
  var $$continue = true;
  var len = arr.length;
  while(i < len && $$continue) {
    var match = Belt_Array.get(arr, i + i0 | 0);
    $$continue = match !== undefined ? Curry._1(check, Caml_option.valFromOption(match)) : false;
  };
  return /* tuple */[
          Belt_Array.slice(arr, i0, i),
          i + i0 | 0
        ];
}

function $at$pipe$less(arr, el) {
  return Belt_Array.concat(arr, /* array */[el]);
}

function $at$pipe$great(el, arr) {
  return Belt_Array.concat(/* array */[el], arr);
}

function $at$question(prim, prim$1) {
  return prim.test(prim$1);
}

var Ops = {
  $at$less: Belt_List.add,
  $at$pipe$less: $at$pipe$less,
  $at$pipe$great: $at$pipe$great,
  $at$question: $at$question
};

var QueryString = { };

exports.take_while = take_while;
exports.Ops = Ops;
exports.QueryString = QueryString;
/* No side effect */

// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';


var re_vowelNcons = (/(?'vs'a|e|i|o|u|y)([b-d]|[f-h]|[j-t][uwxz])$/gi);

var re_vowel = (/[aeiouy]/gi);

var re_diphthong = (/(a|e|i|o|u|y){2}/gi);

var re_last_e = (/e$/i);

var re_last_letter_double = (/(?'l'\w)(\k'l')$/i);

function count_syllables(word) {
  var match = re_vowel.exec(word);
  var vowel_count = match !== null ? match.length : 0;
  var match$1 = re_diphthong.exec(word);
  var diphthongs_count = match$1 !== null ? match$1.length : 0;
  if (re_last_e.test(word)) {
    return (vowel_count - diphthongs_count | 0) - 1 | 0;
  } else {
    return vowel_count - diphthongs_count | 0;
  }
}

function is_ing(word) {
  if (re_vowelNcons.test(word)) {
    var word_stem = word.replace((/ing$/i), "");
    word_stem = re_last_letter_double.test(word_stem) ? word_stem.replace(re_last_letter_double, "") : word_stem.concat("e");
    return /* tuple */[
            word_stem,
            "ing"
          ];
  } else {
    return /* tuple */[
            word,
            undefined
          ];
  }
}

function grammarify(word) {
  return /* () */0;
}

exports.re_vowelNcons = re_vowelNcons;
exports.re_vowel = re_vowel;
exports.re_diphthong = re_diphthong;
exports.re_last_e = re_last_e;
exports.re_last_letter_double = re_last_letter_double;
exports.count_syllables = count_syllables;
exports.is_ing = is_ing;
exports.grammarify = grammarify;
/* re_vowelNcons Not a pure module */
